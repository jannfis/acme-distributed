---
# Define the valid endpoints here. Usually, we will have one for production
# and one for staging purposes.
#
# In case of Letsencrypt, you will need a different account key for each of
# them.
#
endpoints:
  production:
    url: https://acme-v02.api.letsencrypt.org/directory
    private_key: /etc/acme-deploy/accounts/production/private-key.pem
    email_addr: certs@example.com
    timeout_retries: 10
  staging:
    url: https://acme-staging-v02.api.letsencrypt.org/directory
    private_key: /etc/acme-deploy/accounts/staging/private-key.pem
    email_addr: certs@example.com
    timeout_retries: 10

# Define all the certificates you want here. Each certificate needs at least
# a subject (CN), a private key and a path where to store it.
#
# For key and path values, you can use the variable {{endpoint}} which will
# get replaced by the actual endpoint name.
#
certificates:
  ssl.example.com:
    subject: ssl.example.com
    san:
      - ssl2.example.com
      - ssl3.example.com
    key: /etc/acme-deploy/{{endpoint}}/keys/ssl.example.com.key
    path: /etc/acme-deploy/{{endpoint}}/certs/ssl.example.com.pem
    renew_days: 30

  secure.example.com:
    subject: secure.example.com
    key: /etc/acme-deploy/{{endpoint}}/keys/secure.example.com.key
    path: /etc/acme-deploy/{{endpoint}}/certs/secure.example.com.pem
    renew_days: 30
    connector_group: frontend_unbound
    enabled: false

# Define connector groups.
#
# Each connector group has a mandatory type, that all connectors in this group
# will share. A connector group consists of at least 1 connector, whose config
# properties are dependent upon on the connector type.
#
# You can then assign certificates to a connector group to define how this
# certificate is authorized by Let's Encrypt.
#
connector_groups:
  frontend_web:
    type: ssh_http_file
    
    # connectors of type ssh_http_file require at least the following config:
    #
    # name: Symbolic name of this connector. Must be unique.
    # hostname: Name of the host to connect to
    # username: Remote user name to use for SSH connection
    # ssh_port: Port to connect to
    # acme_path: Path on the remote system where to put authorization files
    #
    connectors:
    - name: frontend_web_1
      hostname: www1.example.com
      username: acme
      ssh_port: 22
      acme_path: /var/www/acme
    - name: frontend_web_2
      hostname: www2.example.com
      username: acme
      ssh_port: 22
      acme_path: /var/www/acme

  frontend_unbound:
    type: ssh_dns_unbound
    connectors:
    - name: frontend_ns_1
      hostname: ns.example.com
      username: acme
      ssh_port: 22
      unbound_ctrl: /usr/sbin/unbound-control
      enabled: no

# Set some sane defaults for your environment here.
defaults:
  endpoint: staging
  renew_days: 30
  connector_group: frontend_web
